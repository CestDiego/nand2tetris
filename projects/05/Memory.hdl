// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
* The complete address space of the Hack computer's memory,
* including RAM and memory-mapped I/O.
* The chip facilitates read and write operations, as follows:
*     Read:  out(t) = Memory[address(t)](t)
*     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
* In words: the chip always outputs the value stored at the memory
* location specified by address. If load==1, the in value is loaded
* into the memory location specified by address. This value becomes
* available through the out output from the next time step onward.
* Address space rules:
* Only the upper 16K+8K+1 words of the Memory chip are used.
* Access to address>0x6000 is invalid. Access to any address in
* the range 0x4000-0x5FFF results in accessing the screen memory
* map. Access to address 0x6000 results in accessing the keyboard
* memory map. The behavior in these addresses is described in the
* Screen and Keyboard chip specifications given in the book.
*/

CHIP Memory {
  IN in[16], load, address[15];
  OUT out[16];

  PARTS:

  // Partition the Loading of the address and in
  DMux4Way(in=load, sel=address[13..14], a=RAM-IN1, b=RAM-IN2, c=Screen-IN, d=KBD-IN);

  Or(a=RAM-IN1, b=RAM-IN2, out=RAM-IN);

  // Connect everything
  RAM16K(in=in, load=RAM-IN, address=address[0..13], out=RAM-OUT);
  Screen(in=in, load=Screen-IN, address=address[0..12], out=Screen-OUT);
  Keyboard(out=Keyboard-OUT);

  // Get the output
  Mux4Way16(a=RAM-OUT, b=RAM-OUT, c=Screen-OUT, d=Keyboard-OUT, sel=address[13..14], out=out);

}

